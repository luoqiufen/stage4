D:\web2004\stage4\day08\client\src\api:
下载jq文件 npm i -S jquery

D:\web2004\stage4\day08\server
    命令:
        cnpm init -y 自动生成配置文件
        cnpm i -S express ejs mongoose


分前端页面和后台请求处理
    后台:
        处理前端发送的请求,向数据库进行增删改查的操作
        /getAll 获取数据库中所有的员工数据
        /add 添加新员工
        /modify 修改某个员工的信息
        /delete 删除某个励志的员工的信息
        ==============================
        /getEmps 按条件获取员工的信息

        前端开发时,使用的是vue-cli脚手架工具启动的服务器,此时会产生跨域的问题
        所有需要先处理下跨域
        app.use(function(req,res,next){
            res.header('Access-Control-Allow-Origin','*');
            next();
        })

        对数据库操作使用的是mongoose

    前端:
        localhost:8000/ 看到所有员工列表
        配置路由, / => /list 组件为List.vue
        在List组件创建成功后获取数据库中的数据并解析
            为了获取数据,也为了方便代码的分离管理
            定义api封装所有向后台发送请求的方法
            然后在methods中调用封装的发送请求的方法,在该方法中调用api封装的发送请求的方法,最后在created中调用methods里面的方法

        获取到的数据在其他组件中也有可能会用到,所有将其添加到vuex进行全局管理
            在store中定义状态state,emps: []
            同时定义mutations,对emps进行操作
        再回到created中,将获取到的数据添加到vuex中
            使用辅助函数 mapMutations
        同时,考虑到添加了新员工后,员工列表能及时更新,在List组件中添加 beforeRouteEnter方法,在该方法中重新调用获取数据及设置数据的方法

        添加新员工
            配置相应的路由及组件
            组件中添加相应的文本框并绑定对应的v-model用于获取数据
            点击按钮发送添加员工的请求
                点击按钮 -> methods中定义的方法 -> 调用api中封装的发送请求的方法
            添加成功后,路由自动切换回首页
                使用编程式导航
                this.$router.push('/')

        删除员工
            点击删除 -> 确认删除 -> 调用methods中的方法 -> 调用api方法

        员工管理
            配置路由以及对应修改员工信息的组件
            点击管理 -> 路由切换到修改信息
            List组件与修改员工信息组件是父子关系
            修改好数据之后,点击按钮确定修改
                调用methods中的方法,该方法调用api里的方法发送修改数据的请求
                修改成功后,路由跳转
                this.$router.push('/')



