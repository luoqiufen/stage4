1. 实例属性和方法
	实例属性和方法都是定义在vue实例上的，为了方便在构造器外访问内部的属性和方法

2. 组件
	是Vue中一个强大的功能,可以是,Vue的开发,就是组建的开发

	组建的制作,就是自定义的标签,标签名遵循变量命名规范,并且是一个可以重复使用的Vue实例

	两种方式定义组件:
		1. 全局定义
			Vue.component
		2. 局部定义
			在实例对象中的 components选项里定义
	Vue.component
	缺点: 	全局定义,起名不能重复
			字符串模板,不支持高亮
			不支持css
			没有构建步骤

	

	在组件中使用指令和事件

	组建的嵌套

	父子组件之间的通信(数据的传递)
	组件实例的作用域是独立的,这样就意味着不能直接在组件内部使用父组件的数据,反之亦然
	1) 子组件接收父组件的数据
		在子组件中定义props选项,在这个选项中定义一个属性,该属性可以接收父组件传递过来的数据
		在父组件中,调用组件时,通过v-bind(简写就是 : )绑定该属性

	2) 父组件接收子组件的数据
		子组件通过$emit方法向父组件派发一个自定义事件
		父组件在调用时,通过v-on(@)绑定自定义事件

	slot插槽
		slot可以扩展组件内容,也就是说在定义组件时可以传递内容,可以分发组件的内容

		具名插槽:当需要多个插槽时,可以给插槽命名,设置name属性,在分发内容时,会根据名字来分发
		没有设置name属性的插槽默认是default

	组件的引用 $ref
		组件之间的基础通信基本上通过props,$emit slot就可以完成
		但是有时候还是会需要在组件中直接访问子组件
		为此,ref就派上了用场



